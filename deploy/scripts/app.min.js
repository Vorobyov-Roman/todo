var Model = {
    id: 0,
    find: function(id) {
        for (var i = 0; i < this.todos.length; ++i) if (this.todos[i].id === todoID) return this.todos[i];
        return null;
    },
    push: function(text) {
        this.todos.push({
            text: text,
            id: ++this.id
        });
    },
    pop: function(id) {
        var item = this.find(id);
        item && this.todos.splice(this.todos.indexOf(item), 1);
    },
    check: function(id) {
        return null !== this.find(id);
    }
}, model = Object.create(Model, {
    todos: {
        value: []
    }
}), TodoItem = React.createClass({
    displayName: "TodoItem",
    getInitialState: function() {
        return {
            id: this.props.todoID
        };
    },
    render: function() {
        return React.createElement("li", {
            className: "list-group-item"
        }, this.props.children);
    }
}), Input = React.createClass({
    displayName: "Input",
    onSubmit: function(e) {
        e.preventDefault();
        var text = React.findDOMNode(this.refs.newTodo).value.trim();
        React.findDOMNode(this.refs.newTodo).value = "", text && this.props.onSubmit(text);
    },
    render: function() {
        return React.createElement("form", {
            className: "input-group",
            onSubmit: this.onSubmit
        }, React.createElement("input", {
            type: "text",
            className: "form-control",
            placeholder: "New item",
            ref: "newTodo",
            autofocus: !0
        }), React.createElement("span", {
            className: "input-group-btn"
        }, React.createElement("button", {
            className: "btn btn-default",
            type: "submit"
        }, "Add")));
    }
}), Container = React.createClass({
    displayName: "Container",
    addItem: function(text) {
        model.push(text), this.forceUpdate();
    },
    render: function() {
        return items = [], model.todos.forEach(function(item) {
            items.push(React.createElement(TodoItem, {
                todoID: item.id
            }, item.text));
        }), React.createElement("div", {
            className: "well my-holder"
        }, React.createElement("ul", {
            className: "list-group"
        }, items), React.createElement(Input, {
            onSubmit: this.addItem
        }));
    }
});

React.render(React.createElement(Container, null), document.getElementById("app"));