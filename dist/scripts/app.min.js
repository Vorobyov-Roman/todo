(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _list = require('./list');

var _list2 = _interopRequireDefault(_list);

var Container = (function (_React$Component) {
    _inherits(Container, _React$Component);

    function Container() {
        _classCallCheck(this, Container);

        _get(Object.getPrototypeOf(Container.prototype), "constructor", this).apply(this, arguments);
    }

    _createClass(Container, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                { id: "container" },
                React.createElement(
                    "div",
                    { className: "panel panel-primary", id: "root" },
                    React.createElement(
                        "div",
                        { className: "panel-heading" },
                        this.props.model.text
                    ),
                    React.createElement(
                        "div",
                        { className: "panel-body" },
                        React.createElement(_list2["default"], { items: this.props.model.children })
                    )
                )
            );
        }
    }]);

    return Container;
})(React.Component);

exports["default"] = Container;
module.exports = exports["default"];

},{"./list":6}],2:[function(require,module,exports){
Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Controls = (function (_React$Component) {
    _inherits(Controls, _React$Component);

    function Controls() {
        _classCallCheck(this, Controls);

        _get(Object.getPrototypeOf(Controls.prototype), 'constructor', this).apply(this, arguments);
    }

    _createClass(Controls, [{
        key: 'render',
        value: function render() {
            var buttons = this.props.controls.map(function (item, index, list) {
                var style = "";
                switch (index) {
                    case 0:
                    case list.length - 1:
                        style += 'my-control-' + (index ? 'last ' : 'first ');
                    default:
                        style += 'btn ' + (item.style || 'btn-default');
                }

                return React.createElement(
                    'button',
                    { className: style, type: 'button', onClick: item.handler, key: index },
                    item.text
                );
            });

            return React.createElement(
                'div',
                { className: 'my-controls' },
                React.createElement(
                    'div',
                    { className: 'btn-group' },
                    buttons
                )
            );
        }
    }]);

    return Controls;
})(React.Component);

exports['default'] = Controls;
module.exports = exports['default'];

},{}],3:[function(require,module,exports){
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _modelModel = require('./model/model');

var _modelModel2 = _interopRequireDefault(_modelModel);

var _container = require('./container');

var _container2 = _interopRequireDefault(_container);

(function loadList() {
    var currentList = _modelModel2['default'].load();

    if (!$('#app')[0]) {
        return;
    }

    React.render(React.createElement(_container2['default'], { model: currentList }), $('#app')[0]);
})();

(function fillMenu() {
    var listMenu = '';
    _modelModel2['default'].lists.forEach(function (list) {
        listMenu += '<li><a href="#">' + list.text + '</a></li>';
    });
    listMenu += '<li class="divider" role="separator"></li>';

    $('#list-menu').prepend(listMenu);
})();

},{"./container":1,"./model/model":8}],4:[function(require,module,exports){
Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Input = (function (_React$Component) {
    _inherits(Input, _React$Component);

    function Input() {
        _classCallCheck(this, Input);

        _get(Object.getPrototypeOf(Input.prototype), "constructor", this).apply(this, arguments);
    }

    _createClass(Input, [{
        key: "onSubmit",
        value: function onSubmit(e) {
            e.preventDefault();

            var text = React.findDOMNode(this.refs.newTodo).value.trim();
            React.findDOMNode(this.refs.newTodo).value = '';

            if (text) {
                this.props.onSubmit(text);
            }
        }
    }, {
        key: "render",
        value: function render() {
            return React.createElement(
                "form",
                { className: "input-group", onSubmit: this.onSubmit.bind(this) },
                React.createElement("input", {
                    className: "form-control",
                    id: "input",
                    type: "text",
                    placeholder: "New item",
                    ref: "newTodo"
                }),
                React.createElement(
                    "span",
                    { className: "input-group-btn" },
                    React.createElement(
                        "button",
                        { className: "btn btn-default", type: "submit" },
                        "Add"
                    )
                )
            );
        }
    }]);

    return Input;
})(React.Component);

exports["default"] = Input;
module.exports = exports["default"];

},{}],5:[function(require,module,exports){
Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _controls = require('./controls');

var _controls2 = _interopRequireDefault(_controls);

var _list = require('./list');

var _list2 = _interopRequireDefault(_list);

var _input = require('./input');

var _input2 = _interopRequireDefault(_input);

var _modelDirector = require('./model/director');

var _modelDirector2 = _interopRequireDefault(_modelDirector);

var TodoItem = (function (_React$Component) {
    _inherits(TodoItem, _React$Component);

    function TodoItem(props) {
        _classCallCheck(this, TodoItem);

        _get(Object.getPrototypeOf(TodoItem.prototype), 'constructor', this).call(this, props);
        this.state = {
            expanded: !props.model.children,
            forced: !props.model.children,
            edited: props.edited || false
        };
    }

    _createClass(TodoItem, [{
        key: 'showChildren',
        value: function showChildren(show) {
            $(React.findDOMNode(this.refs.children)).collapse(show ? 'show' : 'hide');
            this.setState({ expanded: show });
        }
    }, {
        key: 'toggleChildren',
        value: function toggleChildren() {
            this.showChildren(!this.state.expanded);
        }
    }, {
        key: 'showControls',
        value: function showControls(enter) {
            $(React.findDOMNode(this.refs.controls)).stop().animate({
                top: enter ? '-1px' : '-35px'
            }, 100);
        }
    }, {
        key: 'setCursor',
        value: function setCursor() {
            this.showChildren(true);
            _modelDirector2['default'].setCursor(this);
        }
    }, {
        key: 'insert',
        value: function insert(text) {
            this.props.model.insert(text);
            this.forceUpdate();
            this.showChildren(true);
        }
    }, {
        key: 'render',
        value: function render() {
            var input = this.state.edited ? React.createElement(_input2['default'], { onSubmit: this.insert.bind(this) }) : null;
            var label = this.props.model.children ? React.createElement(
                'span',
                null,
                ' ',
                React.createElement(
                    'span',
                    { className: 'label label-primary' },
                    this.props.model.completion + '%'
                )
            ) : null;
            var buttons = [{
                text: 'Remove',
                style: 'btn-danger'
            }, {
                text: 'Insert',
                handler: this.setCursor.bind(this)
            }, {
                text: 'Check'
            }];

            if (this.props.model.children) {
                buttons.splice(2, 0, {
                    text: this.state.expanded ? React.createElement(
                        'span',
                        null,
                        'Collapse'
                    ) : React.createElement(
                        'span',
                        null,
                        'Expand ',
                        React.createElement(
                            'span',
                            { className: 'badge' },
                            this.props.model.children.length
                        )
                    ),
                    handler: this.toggleChildren.bind(this)
                });
            }

            var style = this.state.forced ? 'collapse in' : 'collapse';

            return React.createElement(
                'li',
                {
                    className: 'list-group-item',
                    onMouseEnter: _modelDirector2['default'].hover.bind(_modelDirector2['default'], this),
                    onMouseLeave: _modelDirector2['default'].unhover.bind(_modelDirector2['default'])
                },
                React.createElement(_controls2['default'], { controls: buttons, ref: 'controls' }),
                this.props.model.text,
                label,
                React.createElement(
                    'div',
                    { className: style, ref: 'children' },
                    React.createElement(_list2['default'], { items: this.props.model.children }),
                    input
                )
            );
        }
    }]);

    return TodoItem;
})(React.Component);

exports['default'] = TodoItem;
module.exports = exports['default'];

},{"./controls":2,"./input":4,"./list":6,"./model/director":7}],6:[function(require,module,exports){
Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _item = require('./item');

var _item2 = _interopRequireDefault(_item);

var List = (function (_React$Component) {
    _inherits(List, _React$Component);

    function List() {
        _classCallCheck(this, List);

        _get(Object.getPrototypeOf(List.prototype), "constructor", this).apply(this, arguments);
    }

    _createClass(List, [{
        key: "render",
        value: function render() {
            if (!this.props.items) {
                return null;
            }

            var items = this.props.items.map(function (item, index) {
                return React.createElement(_item2["default"], { model: item, key: index });
            });

            return React.createElement(
                "ul",
                { className: "list-group" },
                items
            );
        }
    }]);

    return List;
})(React.Component);

exports["default"] = List;
module.exports = exports["default"];

},{"./item":5}],7:[function(require,module,exports){
Object.defineProperty(exports, "__esModule", {
    value: true
});
var director = {
    _hovered: [],
    _edited: null,

    get prev() {
        return this._hovered.length ? this._hovered[this._hovered.length - 1] : null;
    },

    hover: function hover(curr) {
        this.prev && this.prev.showControls(false);

        curr.showControls(true);
        this._hovered.push(curr);
    },
    unhover: function unhover() {
        this._hovered.pop().showControls(false);
        this.prev && this.prev.showControls(true);
    },

    removeCursor: function removeCursor() {
        this._edited && this._edited.setState({ edited: false });
    },
    setCursor: function setCursor(curr) {
        this.removeCursor();
        curr.setState({ edited: true });
        this._edited = curr;
    }
};

exports["default"] = director;
module.exports = exports["default"];

},{}],8:[function(require,module,exports){
Object.defineProperty(exports, '__esModule', {
    value: true
});
var TodoProto = {
    get completion() {
        var total = this.children.length * 100;
        var done = 0;

        this.children.forEach(function (item) {
            done += item.completion;
        });

        return total ? Math.floor(done / total * 100) : 0;
    },
    insert: function insert(text, val) {
        var newItem = Object.create(TodoProto, {
            text: { value: text },
            completion: {
                value: val || 0,
                configurable: true
            }
        });

        console.log(text, delete this.completion);
        this.children = this.children || [];

        this.children.push(newItem);

        return newItem;
    }
};

var model = {
    lists: [], //holds references to list roots
    createList: function createList(title) {
        var newList = Object.create(TodoProto, {
            text: { value: title },
            children: { value: [] }
        });

        this.lists.push(newList);

        return newList;
    },
    load: function load() {
        //todo: load from cookies

        //temp
        var list = this.createList('Test');

        var python = list.insert('Learn Python');
        python.insert('The language');
        python.insert('App Engine');

        var web = list.insert('Web');
        web.insert('HTML');
        var css = web.insert('CSS');
        css.insert('Basics');
        css.insert('SASS', 100);
        var js = web.insert('JavaScript');
        js.insert('The language', 100);
        js.insert('Standart library');
        var fw = js.insert('Frameworks');
        fw.insert('AngularJS');
        fw.insert('ReactJS', 100);

        //        for (var i = 0; i != 10; ++i) {
        //            list.insert(i.toString());
        //        }
        //        list.children[0].insert('ayy');
        //        list.children[0].insert('lmao');
        //
        //        list.children[5].insert('top');
        //        list.children[5].insert('kek');

        return list;
    }
};

exports['default'] = model;
module.exports = exports['default'];

},{}]},{},[3]);
